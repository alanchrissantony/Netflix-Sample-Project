{"ast":null,"code":"import _slicedToArray from\"/home/user/Downloads/Code/Work Space/Netflix-Sample-Project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./RowPost.css';import{imageUrl}from'../../Constants/Constants';import axios from'../../Axios';import YouTube from'react-youtube';import{API_KEY}from'../../Constants/Constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RowPost(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];useEffect(function(){axios.get(props.url).then(function(response){console.log(response.data.results);setMovies(response.data.results);});},[]);var opts={height:'390',width:'100%',playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),urlId=_useState4[0],setUrlId=_useState4[1];var handleMovies=function handleMovies(id){console.log(id);axios.get(\"/movie/\".concat(id,\"/videos?api_key=\").concat(API_KEY,\"&language=en-US\")).then(function(response){if(response.data.results.length!==0){setUrlId(response.data.results[0]);}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:props.title}),/*#__PURE__*/_jsx(\"div\",{className:\"posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleMovies(movie.id);},src:\"\".concat(imageUrl+movie.backdrop_path),alt:\"\",className:props.isSmall?'smallPoster':'poster'});})}),urlId&&/*#__PURE__*/_jsx(YouTube,{opts:opts,videoId:urlId.key})]});}export default RowPost;","map":{"version":3,"sources":["/home/user/Downloads/Code/Work Space/Netflix-Sample-Project/src/Components/RowPost/RowPost.jsx"],"names":["React","useEffect","useState","imageUrl","axios","YouTube","API_KEY","RowPost","props","movies","setMovies","get","url","then","response","console","log","data","results","opts","height","width","playerVars","autoplay","urlId","setUrlId","handleMovies","id","length","title","map","movie","backdrop_path","isSmall","key"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,eAAP,CACA,OAAQC,QAAR,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAAQC,OAAR,KAAsB,2BAAtB,C,wFAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACpB,cAA4BN,QAAQ,CAAC,EAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eACAT,SAAS,CAAC,UAAM,CACZG,KAAK,CAACO,GAAN,CAAUH,KAAK,CAACI,GAAhB,EAAqBC,IAArB,CAA0B,SAACC,QAAD,CAAY,CAClCC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B,EACAR,SAAS,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAT,CACH,CAHD,EAIH,CALQ,CAKP,EALO,CAAT,CAMA,GAAMC,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAE,KADC,CAETC,KAAK,CAAE,MAFE,CAGTC,UAAU,CAAE,CACV;AACAC,QAAQ,CAAE,CAFA,CAHH,CAAb,CAQA,eAA0BrB,QAAQ,CAAC,EAAD,CAAlC,yCAAOsB,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,YAAY,CAAC,QAAbA,CAAAA,YAAa,CAACC,EAAD,CAAM,CACrBZ,OAAO,CAACC,GAAR,CAAYW,EAAZ,EACAvB,KAAK,CAACO,GAAN,kBAAoBgB,EAApB,4BAAyCrB,OAAzC,qBAAmEO,IAAnE,CAAwE,SAACC,QAAD,CAAY,CAChF,GAAGA,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBU,MAAtB,GAA+B,CAAlC,CAAoC,CAChCH,QAAQ,CAACX,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAR,CACH,CACJ,CAJD,EAKH,CAPD,CAQA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKV,KAAK,CAACqB,KAAX,EADJ,cAEI,YAAK,SAAS,CAAC,SAAf,UACKpB,MAAM,CAACqB,GAAP,CAAW,SAACC,KAAD,qBACR,YAAK,OAAO,CAAE,yBAAIL,CAAAA,YAAY,CAACK,KAAK,CAACJ,EAAP,CAAhB,EAAd,CAA0C,GAAG,WAAKxB,QAAQ,CAAC4B,KAAK,CAACC,aAApB,CAA7C,CAAkF,GAAG,CAAC,EAAtF,CAAyF,SAAS,CAAExB,KAAK,CAACyB,OAAN,CAAgB,aAAhB,CAA8B,QAAlI,EADQ,EAAX,CADL,EAFJ,CAOMT,KAAK,eAAI,KAAC,OAAD,EAAS,IAAI,CAAEL,IAAf,CAAqB,OAAO,CAAEK,KAAK,CAACU,GAApC,EAPf,GADJ,CAWH,CAED,cAAe3B,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './RowPost.css'\nimport {imageUrl} from '../../Constants/Constants'\nimport axios from '../../Axios'\nimport YouTube from 'react-youtube'\nimport {API_KEY} from '../../Constants/Constants'\n\nfunction RowPost(props) {\n    const [movies, setMovies] = useState([])\n    useEffect(() => {\n        axios.get(props.url).then((response)=>{\n            console.log(response.data.results);\n            setMovies(response.data.results)\n        })\n    },[])\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1,\n        },\n      };\n    const [urlId, setUrlId] = useState('')\n    const handleMovies=(id)=>{\n        console.log(id)\n        axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then((response)=>{\n            if(response.data.results.length!==0){\n                setUrlId(response.data.results[0])\n            }\n        })\n    }\n    return (\n        <div className='row'>\n            <h2>{props.title}</h2>\n            <div className=\"posters\">\n                {movies.map((movie)=>\n                    <img onClick={()=>handleMovies(movie.id)} src={`${imageUrl+movie.backdrop_path}`} alt=\"\" className={props.isSmall ? 'smallPoster':'poster'} />\n                )}\n            </div>\n            { urlId && <YouTube opts={opts} videoId={urlId.key} />}\n        </div>\n    )\n}\n\nexport default RowPost\n"]},"metadata":{},"sourceType":"module"}